<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="5759" started-at="2021-04-29T02:42:09Z" finished-at="2021-04-29T02:42:15Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="5759" started-at="2021-04-29T02:42:09Z" finished-at="2021-04-29T02:42:15Z">
      <class name="com.testcases.ExtentReportDemo">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="setup" is-config="true" duration-ms="5045" started-at="2021-04-29T08:12:09Z" finished-at="2021-04-29T08:12:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="getTitle_Fail()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="getTitle_Fail" duration-ms="15" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [no title] but found [JavaByKiran | Dashboard]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [no title] but found [JavaByKiran | Dashboard]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.testcases.ExtentReportDemo.getTitle_Fail(ExtentReportDemo.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle_Fail -->
        <test-method status="PASS" signature="checkResult(org.testng.ITestResult)[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="checkResult" is-config="true" duration-ms="219" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle_Fail status=FAILURE method=ExtentReportDemo.getTitle_Fail()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResult -->
        <test-method status="PASS" signature="getTitle_Pass()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="getTitle_Pass" duration-ms="8" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle_Pass -->
        <test-method status="PASS" signature="checkResult(org.testng.ITestResult)[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="checkResult" is-config="true" duration-ms="0" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle_Pass status=SUCCESS method=ExtentReportDemo.getTitle_Pass()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResult -->
        <test-method status="SKIP" signature="getTitle_Skip()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="getTitle_Skip" duration-ms="2" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping a testcase]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping a testcase
	at com.testcases.ExtentReportDemo.getTitle_Skip(ExtentReportDemo.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle_Skip -->
        <test-method status="PASS" signature="checkResult(org.testng.ITestResult)[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="checkResult" is-config="true" duration-ms="1" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle_Skip status=SKIP method=ExtentReportDemo.getTitle_Skip()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.testcases.ExtentReportDemo@57baeedf]" name="tearDown" is-config="true" duration-ms="439" started-at="2021-04-29T08:12:15Z" finished-at="2021-04-29T08:12:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testcases.ExtentReportDemo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
